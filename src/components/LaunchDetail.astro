---
import type { ILauncher } from "../interfaces";
import { dateFormat } from "../utils";
import CrewMembers from "./CrewMembers.astro";
import StatusShip from "./StatusShip.astro";
interface Props {
  launch: ILauncher;
}

const { launch } = Astro.props;
const detailsLength: boolean = launch.details?.length > 50 ? true : false;
---

<div class="flex sm:flex-col md:flex-row justify-center items-center mt-10">
  <picture class="w-2/5">
    <p class="text-white font-bold text-center mb-5">
      Flight #{launch.flight_number}
    </p>
    {
      launch.links.patch.small ? (
        <img class="mx-auto" src={launch.links.patch.small} alt="" />
      ) : (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="icon icon-tabler icon-tabler-photo-off mx-auto"
          width="128"
          height="128"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="#ffffff"
          fill="none"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <path stroke="none" d="M0 0h24v24H0z" fill="none" />
          <path d="M15 8h.01" />
          <path d="M7 3h11a3 3 0 0 1 3 3v11m-.856 3.099a2.991 2.991 0 0 1 -2.144 .901h-12a3 3 0 0 1 -3 -3v-12c0 -.845 .349 -1.608 .91 -2.153" />
          <path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l5 5" />
          <path d="M16.33 12.338c.574 -.054 1.155 .166 1.67 .662l3 3" />
          <path d="M3 3l18 18" />
        </svg>
      )
    }
  </picture>
  <article class="text-white font-serif tracking-tight mr-10 w-3/5">
    <h2 class="font-bold text-center text-4xl">{launch.name}.</h2>
    <p class="text-center font-semibold text-2xl">
      {() => dateFormat(launch.static_fire_date_utc)}.
    </p>
    <br />
    <p
      class:list={[
        "text-lg",
        {
          "text-justify": detailsLength,
          "text-center": !detailsLength,
        },
      ]}
    >
      {
        launch.details !== null && launch.details.length > 0
          ? `${launch.details}`
          : ""
      }
    </p>
    <br />
    <div>
      {
        launch.fairings && (
          <StatusShip
            reused={launch.fairings.reused}
            recoveryAttempt={launch.fairings.recovery_attempt}
            recovered={launch.fairings.recovered}
          />
        )
      }
    </div>
  </article>
</div>
<br />
{
  launch.crew.length > 0 && (
    <section class="my-12">
      <h1 class="text-white text-center text-3xl font-mono mb-10">
        Launch Crew
      </h1>
      <article class="flex sm:flex-col md:flex-row justify-around">
        {launch.crew.map((crew) => (
          <CrewMembers crewID={crew.crew!} role={crew.role!} />
        ))}
      </article>
    </section>
  )
}
<div class="container mx-auto">
  <p class="text-white text-3xl text-center font-mono mb-10">Webcast</p>
  <iframe
    class="w-full aspect-video"
    src=`https://www.youtube.com/embed/${launch.links.youtube_id}`
  >
  </iframe>
  <br />
</div>
